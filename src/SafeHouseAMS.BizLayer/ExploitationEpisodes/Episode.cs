using System;
using SafeHouseAMS.BizLayer.Survivors;

namespace SafeHouseAMS.BizLayer.ExploitationEpisodes
{
    /// <summary>
    /// Эпизод эксплуатации
    /// </summary>
    public class Episode : BaseDomainModel
    {
        /// <summary>
        /// пострадавший к которому относится эта причина обращения
        /// </summary>
        public Survivor Survivor { get; }

        /// <summary>
        /// Причина обращения - виды эксплуатации или насилия с описанием
        /// </summary>
        public ContactReason ContactReason { get; }

        /// <summary>
        /// Место эксплуатации - страна/город
        /// </summary>
        public string Place { get; }

        /// <summary>
        /// Вовлечение - как и кем
        /// </summary>
        public string InvolvementDescription { get; }

        /// <summary>
        /// Был_а ли несовершеннолетней на момент вовлечения/эксплуатации/насилия
        /// </summary>
        public bool WasJuvenile { get; }

        /// <summary>
        /// Продолжительность эксплуатации
        /// </summary>
        public TimeSpan Duration { get; }

        /// <summary>
        /// Методы контроля
        /// </summary>
        public ControlMethods ControlMethods { get; }

        /// <summary>
        /// Освобождение
        /// </summary>
        public EscapeStatus EscapeStatus { get; }

        /// <summary>
        /// конструктор объекта эпизода
        /// </summary>
        /// <param name="id">идентификатор записис</param>
        /// <param name="isDeleted">признак удаленной записи</param>
        /// <param name="created">дата создания записи</param>
        /// <param name="lastEdit">дата последнего изменения записи</param>
        /// <param name="survivor">пострадавший к которому относится запись</param>
        /// <param name="ContactReason">Вид причины обращения</param>
        /// <param name="place">место эксплуатации</param>
        /// <param name="involvementDescription">кем вовлечен_а</param>
        /// <param name="wasJuvenile">был_а несовершеннолетним</param>
        /// <param name="duration">Продолжительность эксплуатации</param>
        /// <param name="ControlMethods">методы контроля</param>
        /// <param name="escapeStatus">статус освобождения</param>
        /// <exception cref="ArgumentNullException"></exception>
        public Episode(Guid id,
            bool isDeleted,
            DateTime created,
            DateTime lastEdit,
            Survivor survivor,
            ContactReason ContactReason,
            string place,
            string involvementDescription,
            bool wasJuvenile,
            TimeSpan duration,
            ControlMethods ControlMethods,
            EscapeStatus escapeStatus) : base(id, isDeleted, created, lastEdit)
        {
            Survivor = survivor ?? throw new ArgumentNullException(nameof(survivor));
            this.ContactReason = ContactReason ?? throw new ArgumentNullException(nameof(ContactReason));
            Place = place ?? throw new ArgumentNullException(nameof(place));
            InvolvementDescription = involvementDescription ?? throw new ArgumentNullException(nameof(involvementDescription));
            WasJuvenile = wasJuvenile;
            Duration = duration;
            this.ControlMethods = ControlMethods ?? throw new ArgumentNullException(nameof(ControlMethods));
            EscapeStatus = escapeStatus;
        }
    }

}
