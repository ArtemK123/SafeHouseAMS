@page "/EpisodeEditor/{EpisodeId}"
@using SafeHouseAMS.BizLayer.ExploitationEpisodes
@using SafeHouseAMS.WasmApp.Episodes
@using System.Threading
@using SafeHouseAMS.WasmApp.Pages.Survivors
@inject IEpisodesCatalogue _episodesCatalogue;
@inject NavigationManager _navigationManager;
@inject ILogger<EpisodeEditor> _logger;

<h3>Редактирование эпизода</h3>

@if (_episodeUpdaterModel is not null)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <EpisodeEditorComponent Model="_episodeUpdaterModel"/>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <RadzenButton Text="Сохранить" Click="SaveButtonClick"/>
            </div>
        </div>

    </div>
}
else
{
    <div class="container-fluid">
        Не загружен эпизод
    </div>
}

@code {
    [Parameter] public string? EpisodeId { get; set; }
    private Guid _episodeId;
    private EpisodeUpdaterModel? _episodeUpdaterModel;
    private Guid _survivorId;

    protected override async Task OnParametersSetAsync()
    {
        if(Guid.TryParse(EpisodeId, out _episodeId))
            _logger.LogInformation("Episode id parsed successfully");
        else
        {
            _logger.LogError("Failed to parse episode id '{EpisodeIdentifier}'", EpisodeId);
            return;
        }

        var episode = await _episodesCatalogue.GetSingleAsync(_episodeId, CancellationToken.None);
        if (episode is null)
        {
            _logger.LogInformation("Episode not found by id {EpisodeIdentifier}", EpisodeId);
            return;
        }
        _logger.LogInformation("Episode loaded successfully");
        _episodeUpdaterModel = new(episode);
        _survivorId = episode.Survivor.ID;

        await base.OnParametersSetAsync();
    }

    private async Task SaveButtonClick()
    {
        if(_episodeUpdaterModel is null) return;
        var cmd = _episodeUpdaterModel.BuildCommand();
        await _episodesCatalogue.ApplyCommand(cmd, CancellationToken.None);
        _logger.LogInformation("Updated successfully!");
        _navigationManager.NavigateTo($"{nameof(SurvivorDetails)}/{_survivorId}");
    }
}
