@using SafeHouseAMS.BizLayer.LifeSituations
@using SafeHouseAMS.BizLayer.LifeSituations.InquirySources
@using System.Threading
@inject ILifeSituationDocumentsAggregate _documentsAggregate

<div class="container-fluid">
    <div class="row" style="margin-top: 5px">
        <div class="col-md-8">
            <RadzenLabel Text="Дата документа"/>
            <RadzenDatePicker @bind-Value="@DocumentDate" ShowTime="true"/>
        </div>
        <div class="col-md-4">
            <RadzenCheckBox TValue="bool?" TriState="true" @bind-Value="@IsJuvenile"/>
            <RadzenLabel Text="Несовершеннолетний на момент обращения"/>
        </div>
    </div>

    <div class="row" style="margin-top: 5px">
        <div class="col-md-6">
            <RadzenFieldset Text="Канал обращения">
                <div class="row">
                    <div class="col-2-md" style="margin-right: 5px">
                        <RadzenCheckBox TValue="bool" @bind-Value="@selfInquiry"/>
                        Самообращение
                    </div>
                    @if (selfInquiry)
                    {
                        <div class="col-10-md">
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_vk"/>
                                    Вконтакте
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_facebook"/>
                                    Facebook
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_instagram"/>
                                    Instagramm
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_email"/>
                                    Почта
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_phone"/>
                                    Телефон
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_whatsapp"/>
                                    Whatsapp
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_viber"/>
                                    Viber
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_telegramm"/>
                                    Telegramm
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <RadzenCheckBox TValue="bool" @bind-Value="@_signal"/>
                                    Signal
                                </div>
                            </div>
                        </div>
                    }

                </div>
                <div class="row">
                    <div class="col-2-md" style="margin-right: 5px">
                        <RadzenCheckBox TValue="bool" @bind-Value="@isForwardedBySurvivor"/>
                        Перенаправлен другим пострадавшим
                    </div>
                    @if (isForwardedBySurvivor)
                    {
                        <div class="col-10-md">
                            <RadzenTextBox Placeholder="Укажите каким" @bind-Value="@forwardedBySurvivor"></RadzenTextBox>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-2-md" style="margin-right: 5px">
                        <RadzenCheckBox TValue="bool" @bind-Value="@isForwardedByPerson"/>
                        Перенаправлен другим лицом
                    </div>
                    @if (isForwardedByPerson)
                    {
                        <div class="col-10-md" style="margin-right: 5px">
                            <RadzenTextBox Placeholder="Укажите каким" @bind-Value="@forwardedByPerson"></RadzenTextBox>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-2-md" style="margin-right: 5px">
                        <RadzenCheckBox TValue="bool" @bind-Value="@isForwardedByOrganization"/>
                        <RadzenLabel Text="Перенаправлен другой организацией"/>
                    </div>
                    @if (isForwardedByOrganization)
                    {
                        <div class="col-10-md">
                            <RadzenTextBox Style="display: block" Name="ForwardedOrganizationTextBox" Placeholder="Название организации" @bind-Value="@forwardedByOrganization"/>
                            <RadzenRequiredValidator Component="ForwardedOrganizationTextBox" Text="Укажите организацию" Style="position: absolute"/>
                        </div>
                    }
                </div>
            </RadzenFieldset>
        </div>
        <div class="col-md-6">
            <RadzenFieldset Text="Гражданство">
                <div class="row">
                    <div class="col-md-12">
                        <RadzenAutoComplete Data="@_citizenshipAutoCompletions" TextProperty="Value" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            Style="display: block" Name="CitizenshipTextBox" Placeholder="Укажите гражданство" @bind-Value="@Citizenship"/>
                        <RadzenRequiredValidator Style="position: absolute" Component="CitizenshipTextBox" Text="Гражданство обязательно для заполнения"/>
                    </div>
                </div>
            </RadzenFieldset>
        </div>
    </div>
</div>

@code {

    public DateTime DocumentDate { get; private set; } = DateTime.Now;

    public bool? IsJuvenile { get; private set; }

    private bool selfInquiry;
    private bool _vk;
    private bool _facebook;
    private bool _instagram;
    private bool _email;
    private bool _phone;
    private bool _whatsapp;
    private bool _viber;
    private bool _telegramm;
    private bool _signal;

    private bool isForwardedBySurvivor;
    private string forwardedBySurvivor = string.Empty;

    private bool isForwardedByPerson;
    private string forwardedByPerson = string.Empty;

    private bool isForwardedByOrganization;
    private string? forwardedByOrganization;

    public string? Citizenship { get; private set; }

    private record CitizenshipAutoComplete(string Value)
    {
        public static implicit operator string(CitizenshipAutoComplete record) => record.Value;
        public static implicit operator CitizenshipAutoComplete(string value) => new(value);
    }
    private IReadOnlyCollection<CitizenshipAutoComplete> _citizenshipAutoCompletions = new CitizenshipAutoComplete[0];

    public IReadOnlyCollection<IInquirySource> InquirySources
    {
        get
        {
            var result = new List<IInquirySource>(4);
            if (selfInquiry)
            {
                var channel = SelfInquiry.InquiryChannel.None;
                if (_vk) channel |= SelfInquiry.InquiryChannel.Vk;
                if (_facebook) channel |= SelfInquiry.InquiryChannel.Facebook;
                if (_instagram) channel |= SelfInquiry.InquiryChannel.Instagramm;
                if (_email) channel |= SelfInquiry.InquiryChannel.Email;
                if (_phone) channel |= SelfInquiry.InquiryChannel.Phone;
                if (_whatsapp) channel |= SelfInquiry.InquiryChannel.Whatsapp;
                if (_viber) channel |= SelfInquiry.InquiryChannel.Viber;
                if (_telegramm) channel |= SelfInquiry.InquiryChannel.Telegramm;
                if (_signal) channel |= SelfInquiry.InquiryChannel.Signal;
                result.Add(new SelfInquiry(channel));
            }
            if (isForwardedBySurvivor) result.Add(new ForwardedBySurvivor(forwardedBySurvivor));
            if (isForwardedByPerson) result.Add(new ForwardedByPerson(forwardedByPerson));
            if (isForwardedByOrganization && !string.IsNullOrWhiteSpace(forwardedByOrganization)) result.Add(new ForwardedByOrganization(forwardedByOrganization));
            return result;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var completions = new List<CitizenshipAutoComplete>();
        await foreach (var r in _documentsAggregate.GetCitizenshipsCompletions(CancellationToken.None))
            completions.Add(r);
        _citizenshipAutoCompletions = completions;

        await base.OnInitializedAsync();
    }

}
