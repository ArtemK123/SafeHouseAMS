@page "/SurvivorCatalogue"
@using System.Collections.ObjectModel
@using SafeHouseAMS.BizLayer.Abstractions.Models
@using SafeHouseAMS.BizLayer.Abstractions.Services
@inject ISurvivorCatalogue _survivorCatalogue
@inject NavigationManager _navigation

<h3>Каталог пострадавших</h3>

<div class="row">
    <RadzenDataGrid 
        TItem="Survivor"
        Data="@_persons"
        @ref="personsGrid">
        <Columns>
            <RadzenDataGridColumn TItem="Survivor" Property="Num" Title="Код"/>
            <RadzenDataGridColumn TItem="Survivor" Property="Name" Title="Имя"/>
            <RadzenDataGridColumn TItem="Survivor" Title="Пол">
                <Template Context="data">
                    @switch (data.Sex)
                    {
                        case SexEnum.Female:
                            <RadzenLabel Text="Женский"/>
                            break;
                        case SexEnum.Male:
                            <RadzenLabel Text="Мужской"/>
                            break;
                        default:
                            <RadzenLabel Text=@data.OtherSex/>
                            break;
                    }
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Survivor" Property="Age" Title="Возраст, лет"/>
        </Columns>
    </RadzenDataGrid>
</div>
<div class="row">
    <RadzenButton Text="Добавить новую карточку" Click="NewSurvivorClick"/>
</div>


@code {

    RadzenDataGrid<Survivor>? personsGrid;
    private ObservableCollection<Survivor> _persons = new();
    
    protected override async Task OnInitializedAsync()
    {
        await foreach (var survivor in _survivorCatalogue.GetCollection())
        {
            _persons.Add(survivor);
        }
        await base.OnInitializedAsync();
        personsGrid?.Reload();
    }

    private void NewSurvivorClick()
    {
        _navigation.NavigateTo(nameof(AddSurvivor));
    }

}