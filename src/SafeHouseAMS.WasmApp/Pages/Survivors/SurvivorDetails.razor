@page "/SurvivorDetails/{SurvivorID}"
@using System.Threading
@using SafeHouseAMS.BizLayer.LifeSituations
@using SafeHouseAMS.BizLayer.LifeSituations.Documents
@using SafeHouseAMS.BizLayer.LifeSituations.Records
@using SafeHouseAMS.BizLayer.Survivors
@inject ISurvivorCatalogue _survivorCatalogue;
@inject ILifeSituationDocumentsAggregate _documentsAggregate;
@inject NavigationManager _navigationManager;
@inject ILogger<SurvivorDetails> _logger;

<h3>Карточка пострадавшего</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-12-md">
            <button type="button" class="btn btn-primary" @onclick="() => _navigationManager.NavigateTo(nameof(SurvivorCatalogue))">В каталог</button>
            <button type="button" class="btn btn-primary" style="margin-left: 5px" @onclick="@(() => _navigationManager.NavigateTo($"CreateCitizenshipChange/{SurvivorID}"))">Смена гражданства</button>
            <button type="button" class="btn btn-primary" style="margin-left: 5px" @onclick="@(() => _navigationManager.NavigateTo($"ChildrenUpdateEditor/{SurvivorID}"))">Обновление информации о детях</button>
            <button type="button" class="btn btn-primary" style="margin-left: 5px" @onclick="@(() => _navigationManager.NavigateTo($"DomicileUpdateEditor/{SurvivorID}"))">Обновление информации о проживании</button>
            <button type="button" class="btn btn-primary" style="margin-left: 5px" @onclick="@(() => _navigationManager.NavigateTo($"EducationUpdateEditor/{SurvivorID}"))">Обновление информации об образовании</button>
            <button type="button" class="btn btn-primary" style="margin-left: 5px" @onclick="@(() => _navigationManager.NavigateTo($"MigrationStatusUpdateEditor/{SurvivorID}"))">Изменение миграционного статуса</button>
        </div>
    </div>
    @if (_survivor is null)
    {
        <p>Загрузка информации..</p>
    }
    else
    {
        <div class="row">
            <div class="col-sm-8">
                <RadzenFieldset Style="align-self: stretch" Text="Основная информация">
                    <div class="row">
                        <div class="col-sm">
                            № @_survivor.Num <br/>
                            Имя: @_survivor.Name <br/>
                            Пол: @_survivor.SexDisplay <br/>
                        </div>
                        <div class="col-sm">
                            @if (_survivor?.BirthDateAccurate is {} accDob)
                            {
                                <p>Дата рождения @accDob.Date.ToString("d") (полных лет @_survivor.Age)</p>
                            }
                            else if (_survivor!.Age is not null)
                            {
                                <p>Полных лет: @_survivor.Age</p>
                            }
                            else
                            {
                                <p>Возраст не известен</p>
                            }
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
            <div class="col-sm-4 text-muted">
                <RadzenFieldset AllowCollapse="true" Collapsed="true" Text="Системная информация">
                    <div class="row">
                        <div class="col-sm">
                            ID: @_survivor.ID.ToString()
                        </div>
                        <div class="col-sm">
                            Создана: @_survivor.Created.ToString("G") <br/> Изменена: @_survivor.LastEdit.ToString("G")
                        </div>
                        <div class="col-sm">
                            Удалённая запись <input type="checkbox" disabled="disabled" value="@_survivor.IsDeleted" />
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
        </div>
    }
    @if (!_documents.Any())
    {
        <p>Нет документов для отображения</p>
    }
    else
    {
        <RadzenFieldset Text="Записи по пострадавшему">
            @foreach (var doc in _documents)
            {
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-2">
                        <a href="Document/@doc.ID">
                            <RadzenLabel Text="@doc.DocumentDate.ToString("G")"/>
                        </a>
                    </div>
                    <div class="col-md-4">
                        <a href="Document/@doc.ID">
                            @switch (doc)
                            {
                                case Inquiry:
                                    <RadzenLabel Text="Обращение за помощью"/>
                                    break;
                                case SingleRecordUpdate<CitizenshipRecord>:
                                    <RadzenLabel Text="Смена гражданства"/>
                                    break;
                                default:
                                    <RadzenLabel Text="Иной тип документа"/>
                                    break;
                            }
                        </a>
                    </div>
                </div>
            }
        </RadzenFieldset>
    }
</div>

@code {
    private Survivor? _survivor;

    [Parameter] public string? SurvivorID { get; set; }

    private List<LifeSituationDocument> _documents = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Guid.TryParse(SurvivorID, out var surId))
        {
            _survivor = await _survivorCatalogue.GetSingleAsync(surId, CancellationToken.None);
            await foreach (var doc in _documentsAggregate.GetAllBySurvivor(surId, CancellationToken.None))
            {
                _logger.LogInformation("Getting document");
                _documents.Add(doc);
            }
        }
        await base.OnParametersSetAsync();
    }
}
