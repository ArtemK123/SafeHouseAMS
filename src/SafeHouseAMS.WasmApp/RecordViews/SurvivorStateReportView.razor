@using SafeHouseAMS.BizLayer.LifeSituations
@using SafeHouseAMS.BizLayer.LifeSituations.Records
@using System.Threading
@inject DialogService _dialogService;
@inject ILifeSituationDocumentsAggregate _documentsAggregate;

@if (StateReport is {} report)
{
    <div class="container-fluid">
        <div class="row">

            <div class="col-md-4">
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        <div class="container-fluid">
                            @if (report.HasChangedCitizenship)
                            {
                                <a @onclick="@(OpenHistory<CitizenshipRecord>)">
                                    <span class="oi oi-graph"></span>
                                </a>
                            }
                            <CitizenshipRecordView Record="@report.Citizenship"/>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        <div class="container-fluid">
                            @if (report.HasChangedMigration)
                            {
                                <a @onclick="@(OpenHistory<MigrationStatusRecord>)">
                                    <span class="oi oi-graph"></span>
                                </a>
                            }
                            <MigrationStatusRecordView Record="@report.Migration"/>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        <div class="container-fluid">
                            @if (report.HasChangedRegistration)
                            {
                                <a @onclick="@(OpenHistory<RegistrationStatusRecord>)">
                                    <span class="oi oi-graph"></span>
                                </a>
                            }
                            <RegistrationStatusRecordView Record="@report.Registration"/>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        <div class="container-fluid">
                            @if (report.HasChangedDomicile)
                            {
                                <a @onclick="@(OpenHistory<DomicileRecord>)">
                                    <span class="oi oi-graph"></span>
                                </a>
                            }
                            <DomicileRecordView Domicile="@report.Domicile"/>
                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        <div class="container-fluid">
                            @if (report.HasChangedChildren)
                            {
                                <a @onclick="@(OpenHistory<ChildrenRecord>)">
                                    <span class="oi oi-graph"></span>
                                </a>
                            }
                            <ChildrenRecordView Record="@report.Children"/>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        @if (report.Education.Any())
                        {
                            <div class="col-md-2">
                                @if (report.HasChangedEducation)
                                {
                                    <a @onclick="@(OpenHistory<EducationLevelRecord>)">
                                        <span class="oi oi-graph"></span>
                                    </a>
                                }
                                <RadzenLabel Text="Образование:"/>
                            </div>
                            <div class="col-md-10">
                                <ul>
                                    @foreach (var eduRec in report.Education.OrderBy(x => x.Level))
                                    {
                                        <li>
                                            <EducationLevelRecordView Record="@eduRec"/>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
                <div class="row" style="margin-top: 5px">
                    <div class="col-md-12">
                        @if (report.Specialities.Any())
                        {
                            <div class="col-md-2">
                                @if (report.HasChangedSpecialities)
                                {
                                    <a @onclick="@(OpenHistory<SpecialityRecord>)">
                                        <span class="oi oi-graph"></span>
                                    </a>
                                }
                                <RadzenLabel Text="Специальности:"/>
                            </div>
                            <div class="col-md-10">
                                <ul>
                                    @foreach (var specRec in report.Specialities)
                                    {
                                        <li>
                                            <SpecialityRecordView Record="@specRec"/>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-info">
                    <RadzenLabel Text="Отчёт загружается..."/>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public SurvivorStateReport? StateReport { get; set; }
    private async Task OpenHistory<T>() where T : BaseRecord
    {
        if (StateReport is not null)
        {
            var stream = _documentsAggregate.GetRecordHistory<T>(StateReport.SurvivorID, CancellationToken.None);
            await _dialogService.OpenAsync<RecordHistoryDialogView>("История изменения",
                new() { { nameof(RecordHistoryDialogView.HistoryStream), stream } });
        }
    }
}
